#!/bin/bash

main_Menu()
{
   clear
   echo "      *** Proyecto Final de Ethical Hacking ***
   Script que realiza ataques de forma automatizada.

   Para realizar los ataques, es necesario realizar las siguientes acciones:
   1. Identificar targets vulnerables
   2. Encontrar informacion y vulnerabilidades del o los targets.
   3. Explotar vulnerabilidades.
   4. * Realizar todo automaticamente.*

   Seleccione mediante un numero la accion que desea realizar:" 

   read -n1 -s
   case "$REPLY" in
   "1") echo "*** Identificar targets vulnerables ***"
        findTargets_Menu;;
   "2") echo "*** Encontrar informacion y vulnerabilidades ***"
        getVulnerabilities_Menu;;
   "3") echo "*** Explotar vulnerabilidades. ***"
        exploitVulnerabilities_Menu;;
   "4") echo "*** Realizar todo automaticamente ***"
        automaticExploit_Menu;;
     *) echo "Opcion invalida!"
        sleep 1
        clear
        main_Menu;;
   esac
}

findTargets()
{ 
   local puerto=$1
   local archivo=$2 #revisa si es un archivo
   
   #Para el caso de una IP o un rango de IP's
   if [ $puerto != '0' ]
   then
      #ESCANEO CON MASSCAN
      echo "Escaneo con MASSCAN"
      masscan $puerto -p80 > result.txt
      #Guarda en el archivo solo las ips con el puerto 80 abierto (sin lo demas del texto)
      grep -o "[1-255].*" result.txt > masscanResult.txt
      rm result.txt
      if [ -s masscanP80Result.txt ]
      then
         echo "Masscan no encontro ningun puerto 80 abierto."
      else
         echo "Masscan encontro puertos abiertos. Se guardaron las IPs vulnerables en masscanResult.txt"
      fi
      #ESCANEO CON NMAP
      echo "Escaneo con NMAP"
      nmap $puerto > result.txt
      grep -o "*open*" result.txt > findings.txt
      rm result.txt
      if [ -s  findings.txt ]
      then
         rm findings.txt
         echo "NMAP no encontro ningun puerto abierto"
      else
         echo "NMAP encontro puertos abiertos"
         rm findings.txt
         echo $puerto > nmapResults.txt
      fi
   #Para el caso de un archivo
   else
      local ips="" #aqui se guardan como un solo string las IPs
      #Leer el archivo
      while IFS='' read -r line || [[ -n "$line" ]]; do
         ips+="$line "
      done < $archivo
      masscan $ips -p80 > result.txt #guardar el resultado
      grep -o "[1-255].*" result.txt > masscanResult.txt
      rm result.txt
      if [ -s masscanP80Result.txt ]
      then
         echo "Masscan no encontro ningun puerto 80 abierto."
      else
         echo "Masscan encontro puertos abiertos. Se guardaron las IPs vulnerables en masscanResult.txt"
      fi
      #ESCANEO CON NMAP para un archivo
      echo "Escaneo con NMAP"
      nmap -iL $archivo > result.txt
      grep -o "*open*" result.txt > findings.txt
      rm result.txt
      if [ -s  findings.txt ]
      then
         echo "NMAP no encontro ningun puerto abierto"
         rm findings.txt
      else
         echo "NMAP encontro puertos abiertos"
         rm findings.txt
         echo $archivo > nmapResults.txt
      fi
   fi 
}

getVulnerabilities_Menu()
{
   clear
   echo "      Vulnerabilities"
}

exploitVulnerabilities_Menu()
{
   clear
   echo "      Explot"
}

automaticExploit_Menu()
{
  clear
  echo "    *** Explotar automaticamente ***
Para realizar un ataque automatico, es necesario definir un target para realizar los ataques (puede ser un rango), asÃ­ como el tipo de ataque que se desea realizar (si es posible realizarlo)

Opciones disponibles:
   1. SQL injection
   2. XSS
   3. Todos
   4. Regresar
Seleccione mediante un numero la accion que desea realizar:"

   read -n1 -s
   case "$REPLY" in
   "1") echo "*** SQL injection ***";;
   "2") echo "*** XSS ***";;
   "3") echo "*** TODOS PLACEHOLDER ***";;
   "4") echo "*** Regresar ***"
        main_menu;;
     *) echo "Opcion invalida!"
        sleep 1
        clear
        automaticExploit_Menu;;
   esac
}

findTargets_Menu()
{
   local inputTargets

   clear
   echo "      *** Identificar targets vulnerables ***"
   echo "Puede dentificar targets vulnerables de acuerdo: 
        1)-> Un target especifico (ejemplo: 127.0.0.1)
          -> Un rango de red (ejemplo: 127.0.0.1/24)
        2)-> Un archivo con targets espeficios (ejemplo: targets.txt)
            (cat targets.txt:
                 127.0.0.1 
                 128.0.0.2
                 ...)
         "
   echo "Seleccione la opcion 1 o 2:"
   read inputTarget
   if [inputTarget -eq 1] #si es una ip o un rango
   then
        echo "Introduzca target or targets (como ip, rango)"
        read ip
        clear
        echo "Escaneando para " $inputTargets " targets"
        findTargets ip
   else
        finTargets 0 inputTarget
   fi
}

findTargets 10.29.75.82

